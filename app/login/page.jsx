'use client'
import { useState } from 'react'
import { supabase } from '@/lib/supabase'
import { useRouter } from 'next/navigation'
import Link from 'next/link'

export default function LoginPage() {
  const router = useRouter()
  const [loading, setLoading] = useState(false)
  const [form, setForm] = useState({ email: '', password: '' })

  const handleChange = (e) =>
    setForm({ ...form, [e.target.name]: e.target.value })

  const handleSubmit = async (e) => {
    e.preventDefault()
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–µ–π
    if (!form.email.trim()) {
      alert('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ email –∞–¥—Ä–µ—Å')
      return
    }
    
    if (!form.password.trim()) {
      alert('‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å')
      return
    }
    
    if (form.password.length < 6) {
      alert('‚ö†Ô∏è –ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤')
      return
    }
    
    setLoading(true)
    const { error } = await supabase.auth.signInWithPassword({
      email: form.email,
      password: form.password,
    })
    setLoading(false)

    if (error) {
      // –ü–µ—Ä–µ–≤–æ–¥–∏–º –æ—à–∏–±–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
      let errorMessage = '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ'
      
      if (error.message.includes('Invalid login credentials')) {
        errorMessage = '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π email –∏–ª–∏ –ø–∞—Ä–æ–ª—å'
      } else if (error.message.includes('Email not confirmed')) {
        errorMessage = 'üìß Email –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ—á—Ç—É –∏ –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ'
      } else if (error.message.includes('Too many requests')) {
        errorMessage = '‚è∞ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –ø–æ–ø—ã—Ç–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'
      } else if (error.message.includes('User not found')) {
        errorMessage = 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ email'
      } else {
        errorMessage = `‚ùå ${error.message}`
      }
      
      alert(errorMessage)
      return
    }
    
    // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞
    alert('‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!')
    router.push('/')
  }

  return (
    <main className="flex items-center justify-center min-h-screen bg-gray-50 px-4 py-8">
      <div className="w-full max-w-md">
        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞ */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-3 sm:p-4 mb-4 sm:mb-6">
          <div className="flex items-start gap-2 sm:gap-3">
            <svg className="w-4 h-4 sm:w-5 sm:h-5 text-blue-600 mt-0.5 flex-shrink-0" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div>
              <h3 className="text-xs sm:text-sm font-medium text-blue-800 mb-1">–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</h3>
              <p className="text-xs text-blue-700">
                –í–æ–π–¥–∏—Ç–µ –≤ —Å–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º —Å–∫–∏–¥–∫–∞–º –∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∑–∞–∫–∞–∑—ã.
              </p>
            </div>
          </div>
        </div>

        <form
          onSubmit={handleSubmit}
          className="card p-4 sm:p-6 lg:p-8 space-y-4 sm:space-y-5"
        >
          <h1 className="text-xl sm:text-2xl font-semibold text-center">–í—Ö–æ–¥</h1>

          <div>
            <label className="block text-xs sm:text-sm font-medium text-gray-700 mb-1">
              Email –∞–¥—Ä–µ—Å
            </label>
            <input
              type="email"
              name="email"
              placeholder="your@email.com"
              value={form.email}
              onChange={handleChange}
              className="input text-sm sm:text-base"
              required
            />
            <div className="text-xs text-gray-500 mt-1">
              –í–≤–µ–¥–∏—Ç–µ email, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
            </div>
          </div>

          <div>
            <label className="block text-xs sm:text-sm font-medium text-gray-700 mb-1">
              –ü–∞—Ä–æ–ª—å
            </label>
            <input
              type="password"
              name="password"
              placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
              value={form.password}
              onChange={handleChange}
              className="input text-sm sm:text-base"
              required
            />
            <div className="text-xs text-gray-500 mt-1">
              –ú–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤
            </div>
          </div>

          <button
            type="submit"
            disabled={loading}
            className="btn btn-primary w-full py-2.5 sm:py-3 text-sm sm:text-base"
          >
            {loading ? (
              <div className="flex items-center justify-center gap-2">
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white"></div>
                <span className="hidden sm:inline">–í—Ö–æ–¥–∏–º...</span>
                <span className="sm:hidden">–í—Ö–æ–¥...</span>
              </div>
            ) : (
              '–í–æ–π—Ç–∏'
            )}
          </button>

          <div className="flex flex-col gap-2 sm:gap-0 sm:flex-row sm:justify-between text-xs sm:text-sm text-center sm:text-left mt-2">
            <Link href="/forgot-password" className="text-blue-600 hover:underline">
              –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
            </Link>
            <Link href="/register" className="text-blue-600 hover:underline">
              –ù–µ—Ç –∞–∫–∫–∞—É–Ω—Ç–∞? –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
            </Link>
          </div>
        </form>
      </div>
    </main>
  )
}
